version: '3'

services:
    nginx:
        container_name: nginx
        image: nginx:latest
        restart: always
        volumes:
          - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
          - ./nginx/service-url.inc:/etc/nginx/conf.d/service-url.inc
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot
        ports:
          - 80:80
          - 443:443
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

    mysql:
        container_name: mysql
        image: mysql:8.0
        restart: always
        expose:
          - 3306
        environment:
          MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
          TZ: Asia/Seoul
          LC_ALL: C.UTF-8
        command:
          - --character-set-server=utf8mb4
          - --collation-server=utf8mb4_unicode_ci
        volumes:
          - /mysql/:/var/lib/mysql
          - ./config/my.cnf:/etc/mysql/conf.d/my.cnf

    redis:
        container_name: redis
        image: redis:latest
        restart: always
        expose:
          - 6397
        environment:
          TZ: Asia/Seoul
        labels:
          - "name=redis"
          - "mode=standalone"
        


    jenkins:
        container_name: jenkins
        image: jenkins/custom
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /jenkins:/var/jenkins_home
          - /env/.env:/env/.env
        ports:
          - 9999:8080
            #expose:
            #- 9999
            #environment:
            #JENKINS_OPTS: --httpPort=9999 --prefix=/jenkins
    elastic:
        container_name: elastic
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
        restart: always
        ports:
          - 9200:9200
        environment:
          - discovery.type=single-node
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.10.1
        restart: always
        ports:
          - 5601:5601
        environment:
          ELASTICSEARCH_URL: http://elastic:9200
          ELASTICSEARCH_HOSTS: http://elastic:9200
          privileged: true

    certbot:
        container_name: certbot
        image: certbot/certbot
        restart: unless-stopped
        volumes:
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  default:
    name: app-net
    external: true
